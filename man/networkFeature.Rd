% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_feature.R
\name{networkFeature}
\alias{networkFeature}
\alias{averageDegreeCentrality}
\alias{averageBetweennessCentrality}
\alias{averageBetweennessEdgesCentrality}
\alias{averageClosenessCentrality}
\alias{averageEigenvectorCentrality}
\alias{averageClusteringCoefficient}
\alias{averageShortestPath}
\alias{spectralEntropies}
\title{Network features}
\usage{
averageDegreeCentrality(expr, labels, adjacencyMatrix, options = NULL)

averageBetweennessCentrality(expr, labels, adjacencyMatrix,
  options = NULL)

averageBetweennessEdgesCentrality(expr, labels, adjacencyMatrix,
  options = NULL)

averageClosenessCentrality(expr, labels, adjacencyMatrix, options = NULL)

averageEigenvectorCentrality(expr, labels, adjacencyMatrix,
  options = NULL)

averageClusteringCoefficient(expr, labels, adjacencyMatrix,
  options = NULL)

averageShortestPath(expr, labels, adjacencyMatrix, options = NULL)

spectralEntropies(expr, labels, adjacencyMatrix, options = list(bandwidth
  = "Sturges"))
}
\arguments{
\item{expr}{Matrix of variables (columns) vs samples (rows)}

\item{labels}{a vector in which a position indicates the phenotype of the corresponding sample or state}

\item{adjacencyMatrix}{a function that returns the adjacency matrix for a given variables values matrix}

\item{options}{a list containing parameters. Used only in spectralEntropies function. It can be set to either \code{list(bandwidth="Sturges")} or \code{list(bandwidth="Silverman")}.}
}
\value{
a list of values containing the spectral entropie or average node score of each network.

spectralEntropies. A list of values containing the spectral entropy of each network.
}
\description{
Network feature average nodes scores (degree, betweenness, closenness, eigenvector centralities or clustering coefficient) or spectral entropies for each network analysed.
}
\examples{
set.seed(1)
expr <- as.data.frame(matrix(rnorm(120),40,30))
labels<-data.frame(code=rep(0:3,10),names=rep(c("A","B","C","D"),10))
adjacencyMatrix1 <- adjacencyMatrix(method="spearman", association="pvalue",
 threshold="fdr", thr.value=0.05, weighted=FALSE)

# Average degree centrality
averageDegreeCentrality(expr, labels, adjacencyMatrix1)

# Average betweenness centrality
averageBetweennessCentrality(expr, labels, adjacencyMatrix1)

# Average betweenness centrality
averageBetweennessCentrality(expr, labels, adjacencyMatrix1)

# Average closeness centrality
averageClosenessCentrality(expr, labels, adjacencyMatrix1)

# Average eigenvector centrality
averageEigenvectorCentrality(expr, labels, adjacencyMatrix1)

# Average clustering coefficient
averageClusteringCoefficient(expr, labels, adjacencyMatrix1)

# Average shortest path
averageShortestPath(expr, labels, adjacencyMatrix1)

# Spectral entropies
spectralEntropies(expr, labels, adjacencyMatrix1, options=list(bandwidth="Sturges"))
}
